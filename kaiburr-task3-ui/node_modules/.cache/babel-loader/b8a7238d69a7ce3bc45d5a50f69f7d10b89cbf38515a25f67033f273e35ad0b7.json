{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mythi\\\\Downloads\\\\kaiburr-task3-ui\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Input, Table } from 'antd';\nimport { getTaskByName } from '../api/TaskService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const res = await getTaskByName(search); // ✅ properly typed\n        setTasks(res.data);\n      } catch (err) {\n        console.error('Search failed', err);\n        setTasks([]);\n      }\n    };\n    fetchTasks();\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Search by name\",\n      onSearch: value => setSearch(value),\n      enterButton: true,\n      style: {\n        marginBottom: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: tasks,\n      rowKey: \"id\",\n      columns: [{\n        title: 'ID',\n        dataIndex: 'id',\n        key: 'id'\n      }, {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'Owner',\n        dataIndex: 'owner',\n        key: 'owner'\n      }, {\n        title: 'Command',\n        dataIndex: 'command',\n        key: 'command'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TaskList, \"DBYBc72wyLntsqKnPpwuOz+nQXE=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","Input","Table","getTaskByName","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","TaskList","_s","tasks","setTasks","search","setSearch","fetchTasks","res","data","err","console","error","children","placeholder","onSearch","value","enterButton","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","dataSource","rowKey","columns","title","dataIndex","key","_c","$RefreshReg$"],"sources":["C:/Users/Mythi/Downloads/kaiburr-task3-ui/src/components/TaskList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Input, Table } from 'antd';\r\nimport { getTaskByName } from '../api/TaskService';\r\nimport { Task } from '../types/Task';\r\n\r\nconst { Search } = Input;\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const res: { data: Task[] } = await getTaskByName(search); // ✅ properly typed\r\n        setTasks(res.data);\r\n      } catch (err) {\r\n        console.error('Search failed', err);\r\n        setTasks([]);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [search]);\r\n\r\n  return (\r\n    <>\r\n      <Search\r\n        placeholder=\"Search by name\"\r\n        onSearch={value => setSearch(value)}\r\n        enterButton\r\n        style={{ marginBottom: '1rem' }}\r\n      />\r\n      <Table\r\n        dataSource={tasks}\r\n        rowKey=\"id\"\r\n        columns={[\r\n          { title: 'ID', dataIndex: 'id', key: 'id' },\r\n          { title: 'Name', dataIndex: 'name', key: 'name' },\r\n          { title: 'Owner', dataIndex: 'owner', key: 'owner' },\r\n          { title: 'Command', dataIndex: 'command', key: 'command' },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,KAAK,QAAQ,MAAM;AACnC,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGnD,MAAM;EAAEC;AAAO,CAAC,GAAGP,KAAK;AAExB,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAqB,GAAG,MAAMb,aAAa,CAACU,MAAM,CAAC,CAAC,CAAC;QAC3DD,QAAQ,CAACI,GAAG,CAACC,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;QACnCN,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,oBACER,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA,CAACG,MAAM;MACLc,WAAW,EAAC,gBAAgB;MAC5BC,QAAQ,EAAEC,KAAK,IAAIV,SAAS,CAACU,KAAK,CAAE;MACpCC,WAAW;MACXC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF1B,OAAA,CAACH,KAAK;MACJ8B,UAAU,EAAErB,KAAM;MAClBsB,MAAM,EAAC,IAAI;MACXC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,IAAI;QAAEC,SAAS,EAAE,IAAI;QAAEC,GAAG,EAAE;MAAK,CAAC,EAC3C;QAAEF,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC,EACjD;QAAEF,KAAK,EAAE,OAAO;QAAEC,SAAS,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAQ,CAAC,EACpD;QAAEF,KAAK,EAAE,SAAS;QAAEC,SAAS,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC;IAC1D;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACrB,EAAA,CAtCID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}