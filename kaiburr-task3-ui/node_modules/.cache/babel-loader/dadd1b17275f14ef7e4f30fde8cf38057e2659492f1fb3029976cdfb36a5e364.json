{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mythi\\\\Downloads\\\\kaiburr-task3-ui\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\n// src/components/TaskList.tsx\nimport React, { useState, useEffect } from 'react';\nimport { Input, Table } from 'antd';\nimport { getTaskByName } from '../api/TaskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const res = await getTaskByName(search);\n        setTasks(res.data); // ✅ correctly typed now\n      } catch (err) {\n        console.error('Search failed', err);\n        setTasks([]);\n      }\n    };\n    fetchTasks();\n  }, [search]);\n  const columns = [{\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Owner',\n    dataIndex: 'owner',\n    key: 'owner'\n  }, {\n    title: 'Command',\n    dataIndex: 'command',\n    key: 'command'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Search by name\",\n      enterButton: true,\n      onSearch: value => setSearch(value),\n      style: {\n        marginBottom: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: tasks,\n      columns: columns,\n      rowKey: \"id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"DBYBc72wyLntsqKnPpwuOz+nQXE=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","Input","Table","getTaskByName","jsxDEV","_jsxDEV","Search","TaskList","_s","tasks","setTasks","search","setSearch","fetchTasks","res","data","err","console","error","columns","title","dataIndex","key","children","placeholder","enterButton","onSearch","value","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","dataSource","rowKey","_c","$RefreshReg$"],"sources":["C:/Users/Mythi/Downloads/kaiburr-task3-ui/src/components/TaskList.tsx"],"sourcesContent":["// src/components/TaskList.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Input, Table } from 'antd';\r\nimport { getTaskByName } from '../api/TaskService';\r\nimport { Task } from '../types/Task';\r\n\r\nconst { Search } = Input;\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const res = await getTaskByName(search);\r\n        setTasks(res.data); // ✅ correctly typed now\r\n      } catch (err) {\r\n        console.error('Search failed', err);\r\n        setTasks([]);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [search]);\r\n\r\n  const columns = [\r\n    { title: 'ID', dataIndex: 'id', key: 'id' },\r\n    { title: 'Name', dataIndex: 'name', key: 'name' },\r\n    { title: 'Owner', dataIndex: 'owner', key: 'owner' },\r\n    { title: 'Command', dataIndex: 'command', key: 'command' },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Search\r\n        placeholder=\"Search by name\"\r\n        enterButton\r\n        onSearch={value => setSearch(value)}\r\n        style={{ marginBottom: 16 }}\r\n      />\r\n      <Table dataSource={tasks} columns={columns} rowKey=\"id\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,KAAK,QAAQ,MAAM;AACnC,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAM;EAAEC;AAAO,CAAC,GAAGL,KAAK;AAExB,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMX,aAAa,CAACQ,MAAM,CAAC;QACvCD,QAAQ,CAACI,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;QACnCN,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,MAAMQ,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,IAAI;IAAEC,SAAS,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAK,CAAC,EAC3C;IAAEF,KAAK,EAAE,MAAM;IAAEC,SAAS,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAO,CAAC,EACjD;IAAEF,KAAK,EAAE,OAAO;IAAEC,SAAS,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EACpD;IAAEF,KAAK,EAAE,SAAS;IAAEC,SAAS,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAU,CAAC,CAC3D;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACC,MAAM;MACLkB,WAAW,EAAC,gBAAgB;MAC5BC,WAAW;MACXC,QAAQ,EAAEC,KAAK,IAAIf,SAAS,CAACe,KAAK,CAAE;MACpCC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF5B,OAAA,CAACH,KAAK;MAACgC,UAAU,EAAEzB,KAAM;MAACU,OAAO,EAAEA,OAAQ;MAACgB,MAAM,EAAC;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACzB,EAAA,CApCID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}